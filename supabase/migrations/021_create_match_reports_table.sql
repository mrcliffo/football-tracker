-- Migration 021: Create match_reports table for AI-generated match narratives
-- This table stores AI-generated narrative match reports for parent viewing

-- Create match_reports table
CREATE TABLE IF NOT EXISTS match_reports (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  match_id UUID NOT NULL REFERENCES matches(id) ON DELETE CASCADE,
  report_text TEXT NOT NULL,
  generated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,

  -- Ensure one report per match
  UNIQUE(match_id)
);

-- Create index for faster lookups
CREATE INDEX IF NOT EXISTS idx_match_reports_match_id ON match_reports(match_id);

-- Enable Row Level Security
ALTER TABLE match_reports ENABLE ROW LEVEL SECURITY;

-- RLS Policies for match_reports

-- Managers can view reports for their team's matches
DROP POLICY IF EXISTS "Managers can view match reports for their teams" ON match_reports;
CREATE POLICY "Managers can view match reports for their teams"
  ON match_reports
  FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM matches m
      INNER JOIN teams t ON m.team_id = t.id
      WHERE m.id = match_reports.match_id
        AND t.manager_id = auth.uid()
    )
  );

-- Parents can view reports for matches their children played in
DROP POLICY IF EXISTS "Parents can view match reports for their children" ON match_reports;
CREATE POLICY "Parents can view match reports for their children"
  ON match_reports
  FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM match_players mp
      INNER JOIN team_members tm ON mp.player_id = tm.player_id
      WHERE mp.match_id = match_reports.match_id
        AND tm.user_id = auth.uid()
    )
  );

-- Managers can insert/update reports for their team's matches
DROP POLICY IF EXISTS "Managers can insert match reports for their teams" ON match_reports;
CREATE POLICY "Managers can insert match reports for their teams"
  ON match_reports
  FOR INSERT
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM matches m
      INNER JOIN teams t ON m.team_id = t.id
      WHERE m.id = match_reports.match_id
        AND t.manager_id = auth.uid()
    )
  );

-- Add comment to table
COMMENT ON TABLE match_reports IS 'Stores AI-generated narrative match reports for parent viewing';
COMMENT ON COLUMN match_reports.report_text IS 'AI-generated narrative description of the match';
COMMENT ON COLUMN match_reports.generated_at IS 'Timestamp when the report was generated by AI';
